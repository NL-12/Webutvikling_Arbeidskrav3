/* Jeg bruker en stjerne (*) selektor for å sette dette på alle elementer. Dette er en css regel som påvirker hvordan css håndtere at jeg setter størrelse på elementer. */
* {
    box-sizing: border-box;
}



/* Her setter jeg regler som skal gjelde for hoved html-taggene. Som at font-size skal være relativ til skjermstørrelsen. Margin blir satt på 0 så jeg kan selv velge en verdi senere. Med font valgte jeg å bruke et enkelt sans-serif font som Arial. Det er ikke fancy, men det ser greit ut. */
html {
    font-size: calc(1em + 1vw);
}
html > body {
    font-family: Arial, Helvetica, sans-serif;
    margin: 0;
}
header, footer > nav {
    margin: 0;
}



/* En klasse JavaScript skal bruke for å skulle elementer. */
.hidden {
    display: none;
}



/* Styling for å holde teksten til lenker konsekvent. Jeg har sørget for å bevare understreken så det er tydelig at det er en linke. */
a:visited {
    color: #000;
}
a:link {
    color: #000;
}



/* Her definerer jeg navnene til mine grid-areas, og nedenfor disse er også header. */
main {
    grid-area: mainArea;
}
aside {
    grid-area: asideArea;
}
footer {
    grid-area: footerArea;
}



/* En del forskjellig styling for å gjøre så listen innenfor header blir inline og ikke ser ut som en liste. Samt annet pynt. */
header {
    grid-area: headerArea;
    font-size: 1.3rem;
    padding: 0.5rem;
    margin: 0 0.3rem 0;
    color: #6C2F62;
    background-color: #DDDDDD;
}
header a:visited {
    color: #6C2F62;
}
header a:link {
    color: #6C2F62;
}
header, footer > nav > ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
}
header > nav > ul > li {
    display: inline-block;
    height: 0.5rem;
}
header > nav > ul > li > a {
    text-decoration: none
}
header > nav > form > label {
    width: 100%;
}
header > nav > form > input {
    width: 100%;
}



/* Styling for teksten på produkt og blog-siden i tillegg til å gi den flex-basis 100% så den er på en egen linke. */
#breadcrumbs {
    font-size: 0.8rem;
    flex-basis: 100%;
}
#breadcrumbs a {
    text-decoration: underline;
}



/* Styling så søkebaren er på en egen linke i en flex. */
#search-con {
    flex-basis: 100%;
}
#search-con input {
    width: 90%;
}



/* grid-en som dekker hele siden og omfatter alle områdene. På mobil er dette som standard med 1 kolone og 4 rader. maks bredde er 1200px etter hvilket jeg anser du er på desktop versjonen. */
#grid-container {
    display: grid;
    grid-template-columns: 1fr;
    grid-template-rows: repeat(4, auto);
    grid-template-areas: "headerArea" "mainArea" "asideArea" "footerArea";
    place-items: center;
    margin: 0 auto;
    width: 100%;
    max-width: 1200px;
}



/* Alt dette er styling for den skulte hamburger-menyen som åpnes med JavaScript. margin-right: -10000px er en hack, så det er ikke ideelt, men det gir ingen feilmelding og alt virker så det er beholdt siden menyen ikke er en stor del av oppgaven, men en bonus. */
#widget-content-nav {
    position: absolute;
    top: 1rem;
    left: 0;
    right: 0;
    width: auto;
    margin-right: -10000px;
    max-width: 330px;
    z-index: 9999;
    background-color: lightgray;
}
#widget-content-nav li {
    list-style-type: none;
}
#widget-content-nav > p > span {
    padding: 0 30px;
}
#widget-toggler-nav {
    position: relative;
}



/* En del forskjellige styling for diverse ikoner og hvordan de ligger i sitt element. */
#social-icons-menu li {
    display: inline-block;
    font-size: 1.8rem;
    margin: 0.5rem 0.5rem;
}
.social-icons {
    font-size: 3rem;
}
.social-icons ul > li {
    display: inline-block;
    height: 0.5rem;
}
.fa-x {
    margin-left: 0.5rem;
}
.fa-instagram {
    color: #6f39ba
}
.fa-snapchat {
    color: #fffc00;
}
.fa-facebook {
    color: #4267b2;
}



/* Styling for en hero og hva jeg kaller en mini-hero, altså bokser med farge som har mye padding for å fylle ut fargen sin. */
.hero {
    background-color: #6C2F62;
    color: #fff;
    padding: 1.5rem;
    margin: 1rem 0;
}
.hero>a:visited {
    color: #fff;
}
.mini-hero {
    background-color: whitesmoke;
    width: 100%;
    margin: 0 auto;
    text-align: center;
}
.mini-hero p {
    color: #000;
    font-size: 1.5rem;
    font-weight: bold;
}
.mini-hero a:visited {
    color: #000;
}
.mini-hero a:link {
    color: #000;
}



/* Dette er css for forskjellige flex klasser. Disse er brukt på forskjellige måter. header-flex er som navnet tilsier bare brukt i headeren og sentrerer alt av innehold. main-flex er kun brukt på index siden og plasserer inneholdet under hverandre. grid-flex brukes i sammenheng med en annen klasse for å sette elementer sammen bortover en linje. */
.header-flex {
    display: flex;
    flex-flow: row wrap;
    width: 100%;
    min-width: 0.5rem;
    justify-content: center;
    align-items: center;
}
.main-flex {
    display: flex;
    flex-wrap: wrap;
    flex-direction: column;
    align-items: baseline;
    justify-content: center;
}
.grid-flex {
    display: flex;
    flex-flow: row wrap;
    justify-content: space-between;
    align-items: baseline;
}



/* Forskjellige klasser som brukes sammen med grid-flex. flex-basis og margin er begge nødvendig for å plassere elementer riktig bortover en linje. med auto på bredde fyller den selv ut plassen. */
.popular-products img {
    width: 85%;
}
.popular-products article {
    flex-basis: 50%;
    margin: 1rem auto;
    text-align: center;
}
.popular-products article > p {
    font-size: 0.5rem;
    margin: 0;
    padding: 0;
    text-align: center;
}
.popular-products h3 {
    flex-basis: 100%;
}
.popular-products h4 {
    margin: 0;
    padding: 0;
}
.categories-products img {
    width: 100%;
    object-fit: fill;
}
.categories-products article {
    flex-basis: 30%;
    margin: 0.5rem auto;
    text-align: center;
}
.categories-products article > p {
    font-size: 0.5rem;
    margin: 0;
    padding: 0;
    text-align: center;
}
.categories-products a > p {
    text-align: left;
    font-size: 0.8rem;
}
.categories-products h3 {
    flex-basis: 100%;
}
.categories-products h4 {
    margin: 0;
    padding: 0;
}
.qanda a, .qanda p {
    flex-basis: 100%;
    text-align: center;
}
.qanda nav {
    flex-basis: 100%;
    margin: 1rem auto;
    text-align: center;
}
.qanda {
    background-color: #DDDDDD;
    padding: 1rem;
}



/* Styling for pynt av tekst. */
.indent {
    margin-left: 1.5rem;
    text-decoration: underline;
    text-underline-offset: 0.4rem;
    text-decoration-thickness: 5px;
}



/* Styling for til top knappen. */
#back-top a {
    color: #fff;
}
#back-top a:visited {
    color: #fff;
}
#back-top a:link {
    color: #fff;
}
#back-top {
    background-color: #6C2F62;
    padding: 1rem;
    max-width: 15rem;
    width: 100%;
    margin: 1rem auto;
}



/* En kombinasjon av klasser som kombineres med flex-grid og styling som brukes på produkt og blog siden. */
.product-card p, .product-card form, .product-card img, .blog-card p, .blog-card img, .blog-card iframe {
    flex-basis: 80%;
    margin: 1rem auto;
}
.product-card img, .blog-card img, .blog-card iframe {
    text-align: center;
    width: 100%;
    flex-basis: 100%;
}
.blog-card iframe {
    height: 25rem;
}
.product-card form>select {
    width: 300px;
    height: auto;
    font-size: 1rem;
}
.product-card h2, .blog-card h2, .blog-card h3 {
    flex-basis: 100%;
}
.credit-text {
    font-size: 0.8rem;
}
.circle-empty {
    color: grey;
}
.make-center {
    text-align: center;
}
.make-justify {
    text-align: justify;
}
.big-text {
    font-size: 1.3rem;
}
.gray-background {
    background-color: #767676;
}



/* Alt av media queries er puttet her nede så det er mest oversiktelig. */

/* Dette er for å gjøre hamburger-menyen litt større på større skjermer. */
@media only screen and (min-width: 650px) {
    #widget-content-nav {
        max-width: 500px;
    }
}
/* Etter 1200px er det anset som at du er på desktop versjonen. Jeg legger jeg til 3 koloner i alt. */
@media only screen and (min-width: 1200px) {
    #grid-container {
        grid-template-columns: repeat(3, 1fr);
    }

    header {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 1;
        grid-row-end: 2;
    }
    
    main {
        grid-column-start: 1;
        grid-column-end: 4;
        grid-row-start: 2;
        grid-row-end: 4;
    }
    
    aside {
        grid-column-start: 3;
        grid-column-end: 4;
        grid-row-start: 4;
        grid-row-end: 4;
        padding: 5rem 0;
    }
    
    footer {
        grid-column-start: 1;
        grid-column-end: 3;
        grid-row-start: 4;
        grid-row-end: 4;
    }
}